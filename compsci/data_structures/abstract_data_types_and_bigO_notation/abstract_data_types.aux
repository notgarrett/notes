\relax 
\providecommand\zref@newlabel[2]{}
\providecommand \oddpage@label [2]{}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Examples}}{1}{}\protected@file@percent }
\newlabel{tab:}{{1}{1}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Complexities ordered in from smallest to largest.}}{2}{}\protected@file@percent }
\newlabel{tab:second}{{2}{2}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces The following run in constant time: O(1)}}{2}{}\protected@file@percent }
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces The following run in linear time: $O(n)$}}{3}{}\protected@file@percent }
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces The following run in linear time: $O(n)$}}{3}{}\protected@file@percent }
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces $f(n) = n*n = n^2, O(f(n)) = O(n^2)$}}{3}{}\protected@file@percent }
\@writefile{loa}{\contentsline {algocf}{\numberline {5}{\ignorespaces Here, 0 in the second loop is changed into \bf  {i}}}{3}{}\protected@file@percent }
\@writefile{loa}{\contentsline {algocf}{\numberline {6}{\ignorespaces Answer: $O(log2(n)) = O(log(n))$}}{4}{}\protected@file@percent }
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Big-O common examples}}{4}{}\protected@file@percent }
\newlabel{tab3}{{3}{4}}
\gdef \@abspage@last{4}
